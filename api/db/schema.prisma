// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}

model User {
  id           String     @id @default(uuid()) @db.Uuid
  authId       String?    @unique @default(uuid())
  authProvider String     @default("unknown")
  name         String
  username     String?
  bot          Boolean    @default(false)
  admin        Boolean    @default(false)
  actions      Action[]
  pageRoles    PageRole[]

  @@unique([authId, authProvider])
}

model Page {
  id        String         @id @default(uuid()) @db.Uuid
  name      String
  folder    String         @default("")
  title     String
  body      String
  data      Json
  createdAt DateTime       @default(now())
  locations PageLocation[]
  actions   Action[]
  roles     PageRole[]

  @@unique([folder, name])
}

model PageLocation {
  id       String @id @default(uuid()) @db.Uuid
  location String @unique
  page     Page   @relation(fields: [pageId], references: [id])
  pageId   String @db.Uuid
}

model Role {
  id           String     @id @default(uuid()) @db.Uuid
  name         String     @unique
  UserPageRole PageRole[]
}

model PageRole {
  id     String @id @default(uuid()) @db.Uuid
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  page   Page   @relation(fields: [pageId], references: [id])
  pageId String @db.Uuid

  @@unique([userId, pageId, roleId])
}

model Action {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  folder    String   @default("")
  type      String
  title     String
  body      String
  meta      String   @default("")
  computed  Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  page      Page     @relation(fields: [pageId], references: [id])
  pageId    String   @db.Uuid
}
